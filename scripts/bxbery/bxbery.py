# -*- coding: utf-8 -*-

import requests

z = {
"Абакан" : 5,
"Альметьевск" : 92,
"Архангельск" : 6,
"Астрахань" : 7,
"Барнаул" : 96,
"Белгород" : 8,
"Березники" : 9,
"Благовещенск" : 10,
"Братск" : 70,
"Брянск" : 11,
"Великий Новгород" : 12,
"Владивосток" : 134,
"Владимир" : 13,
"Волгоград" : 14,
"Волгодонск" : 131,
"Вологда" : 146,
"Воркута" : 135,
"Воронеж" : 15,
"Глазов" : 141,
"Екатеринбург" : 16,
"Иваново" : 17,
"Ижевск" : 18,
"Иркутск" : 19,
"Йошкар-Ола" : 20,
"Казань" : 90,
"Калуга" : 21,
"Каменск-Уральский" : 22,
"Кемерово" : 23,
"Киров" : 24,
"Комсомольск-на-Амуре" : 91,
"Кострома" : 133,
"Краснодар" : 25,
"Краснотурьинск" : 147,
"Красноярск" : 26,
"Курган" : 27,
"Курск" : 28,
"Лесной" : 103,
"Липецк" : 29,
"Магнитогорск" : 30,
"Миасс" : 31,
"Москва" : 68,
"Мурманск" : 69,
"Мытищи" : 149,
"Набережные Челны" : 105,
"Нефтекамск" : 138,
"Нижневартовск" : 32,
"Нижний Новгород" : 33,
"Нижний Тагил" : 34,
"Новокузнецк" : 66,
"Новороссийск" : 35,
"Новосибирск" : 37,
"Новоуральск" : 106,
"Озерск" : 110,
"Октябрьский" : 145,
"Омск" : 38,
"Орел" : 39,
"Оренбург" : 40,
"Орск" : 111,
"Пенза" : 112,
"Первоуральск" : 142,
"Пермь" : 41,
"Петрозаводск" : 42,
"Петропавловск-Камчатский" : 114,
"Псков" : 139,
"Пятигорск" : 43,
"Ростов-на-Дону" : 44,
"Рязань" : 45,
"Салават" : 115,
"Самара" : 46,
"Санкт-Петербург" : 116,
"Саранск" : 117,
"Саратов" : 47,
"Серов" : 48,
"Смоленск" : 49,
"Снежинск" : 118,
"Советский" : 119,
"Ставрополь" : 50,
"Сургут" : 51,
"Сызрань" : 120,
"Сыктывкар" : 52,
"Таганрог" : 53,
"Тамбов" : 54,
"Тверь" : 55,
"Тольятти" : 56,
"Томск" : 57,
"Тула" : 122,
"Тюмень" : 67,
"Улан-Удэ" : 59,
"Ульяновск" : 124,
"Уфа" : 60,
"Ухта" : 126,
"Хабаровск" : 61,
"Ханты-Мансийск" : 127,
"Химки" : 144,
"Чебоксары" : 62,
"Челябинск" : 63,
"Череповец" : 128,
"Чита" : 65,
"Шадринск" : 140,
"Щелково" : 148,
"Элиста" : 130,
"Южно-Сахалинск" : 129,
"Ярославль" : 64,
}

def getCityId(name):
    if name in z.keys():
        return z[name]
    else:
        return -1

def getDim(x):
    return int((float(x)**(1/3)) * 100)
    
import sys

fromCity = sys.argv[1]
toCity = sys.argv[2]
weight = float(sys.argv[3])
volume = sys.argv[4]
value = sys.argv[5]



if fromCity != "Москва":
    sys.exit()

toCityId = getCityId(toCity)

data = {
    "apijsonmethod" : "DeliveryCosts",
    "city" : toCityId,
    "weight" : int(weight * 1000),
    "sum" : value,
    "cod" : value,
}

r = requests.post("http://www.boxberry.ru/apijson.php", data=data)

import json
try:
	price = float(json.loads(r.text)[1])
	deliv = json.loads(r.text)[2]
	print(json.dumps({ "price": price,
						"time": deliv,
						"condition": "Отправления из интернет-магазинов",
						}))
						
	if float(value) < 500:
		value = 500
	data = { 
		"active_tab": "%23tabs-2",
		"type": "4",
		"cityfrom": fromCity,
		"cityto": toCity,
		"height": getDim(volume),
		"width": getDim(volume),
		"depth": getDim(volume),
		"volume_weight": volume,
		"weight": weight,
		"value": value,
		"calc": "%D0%A0%D0%B0%D1%81%D1%81%D1%87%D0%B8%D1%82%D0%B0%D1%82%D1%8C"
	}
	r = requests.post("http://express.boxberry.ru/calculate_the_cost_of_sending/", data=data)
	import re
	r = re.search("var del_price = \\'[0-9\\.,]*\\'", r.text).group()
	r = r.split("'")[1]
	price = float((r or '0').replace(',', '.'))
	print(json.dumps({  "price": price,
						"time": None,
						"condition": "Отправления физических лиц",
	}))
except:
	pass